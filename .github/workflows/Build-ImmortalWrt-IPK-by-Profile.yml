# 工作流名称
name: Build-ImmortalWrt-IPK-by-Profile

on:
  # 允许手动触发
  workflow_dispatch:
    inputs:
      profile:
        type: choice
        description: '请选择您的设备型号'
        options:
          - ariaboard_photonicat
          - armsom_sige3
          - armsom_sige7
          - cyber_cyber3588-aib
          - ezpro_mrkaio-m68s
          - firefly_roc-rk3328-cc
          - firefly_roc-rk3568-pc
          - friendlyarm_nanopc-t4
          - friendlyarm_nanopc-t6
          - friendlyarm_nanopi-r2c
          - friendlyarm_nanopi-r2c-plus
          - friendlyarm_nanopi-r2s
          - friendlyarm_nanopi-r3s
          - friendlyarm_nanopi-r4s
          - friendlyarm_nanopi-r4se
          - friendlyarm_nanopi-r4s-enterprise
          - friendlyarm_nanopi-r5c
          - friendlyarm_nanopi-r5s
          - friendlyarm_nanopi-r6c
          - friendlyarm_nanopi-r6s
          - huake_guangmiao-g4c
          - lunzn_fastrhino-r66s
          - lunzn_fastrhino-r68s
          - lyt_t68m
          - pine64_rock64
          - pine64_rockpro64
          - radxa_cm3_io
          - radxa_e25
          - radxa_rock-3a
          - radxa_rock-3b
          - radxa_rock-3c
          - radxa_rock-5a
          - radxa_rock-5b
          - radxa_rock-pi-4a
          - radxa_rock-pi-e
          - radxa_rock-pi-s
          - radxa_zero-3e
          - radxa_zero-3w
          - sinovoip_bpi-r2-pro
          - xunlong_orangepi-5
          - xunlong_orangepi-5-plus
          - xunlong_orangepi-r1-plus
          - xunlong_orangepi-r1-plus-lts
        required: true
        default: 'friendlyarm_nanopi-r3s'
      package_repo:
        description: '要编译的插件 Git 仓库地址'
        required: true
        default: 'https://github.com/mccding/luci-app-ddns-go'
      package_name:
        description: '插件包名 (通常是仓库名)'
        required: true
        default: 'luci-app-ddns-go'
      immortalwrt_version:
        description: 'ImmortalWrt SDK 版本'
        required: true
        default: '24.10.2'

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Determine Target Architecture
        id: Fw_info
        run: |
          echo "TARGET=rockchip" >> $GITHUB_ENV
          echo "SUBTARGET=armv8" >> $GITHUB_ENV
          echo "✅ 设备型号 '${{ inputs.profile }}' 已映射到平台: rockchip/armv8"

      - name: Setup ImmortalWrt SDK environment
        run: |
          SDK_URL="https://downloads.immortalwrt.org/releases/${{ inputs.immortalwrt_version }}/sdk/immortalwrt-sdk-${{ inputs.immortalwrt_version }}-${{ env.TARGET }}-${{ env.SUBTARGET }}_*.tar.xz"
          echo "📥 下载 SDK from: $SDK_URL"
          wget -q $SDK_URL -O immortalwrt-sdk.tar.xz
          
          tar -xJvf immortalwrt-sdk.tar.xz
          
          SDK_DIR=$(find . -mindepth 1 -maxdepth 1 -type d -name "immortalwrt-sdk-*")
          echo "SDK_DIR=$SDK_DIR" >> $GITHUB_ENV
          cd $SDK_DIR
          echo "✅ SDK 环境准备就绪: $(pwd)"

      - name: Clone and compile the package
        run: |
          cd ${{ env.SDK_DIR }}
          git clone --depth 1 ${{ inputs.package_repo }} package/${{ inputs.package_name }}
          echo "✅ 已克隆插件 '${{ inputs.package_name }}'"
          
          echo "🚀 开始编译..."
          make package/${{ inputs.package_name }}/compile V=s

      # ##################################################################
      # ## ↓↓↓ 这里是本次修改的核心部分 ↓↓↓
      # ##################################################################
      - name: Organize and upload IPK package
        uses: softprops/action-gh-release@v2
        with:
          # 修改1: tag_name 使用插件名, 确保每个插件都有独立的 Release
          tag_name: ipk-${{ inputs.package_name }}
          # 修改2: Release 的标题现在是 "ImmortalWrt - <你的插件名>"
          name: ImmortalWrt - ${{ inputs.package_name }}
          body: |
            自动编译生成的 IPK 插件包。
            - 目标设备: `${{ inputs.profile }}`
            - 目标平台: `${{ env.TARGET }}/${{ env.SUBTARGET }}`
            - 插件仓库: `${{ inputs.package_repo }}`
          files: |
            ${{ env.SDK_DIR }}/bin/packages/*/*/*.ipk
          prerelease: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
