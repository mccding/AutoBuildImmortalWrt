# 工作流名称
name: Build-ImmortalWrt-IPK-from-Source

on:
  # 允许手动触发
  workflow_dispatch:
    inputs:
      profile:
        type: choice
        description: '请选择您的设备型号 (用于配置编译环境)'
        options:
          - ariaboard_photonicat
          - armsom_sige3
          - armsom_sige7
          - cyber_cyber3588-aib
          - ezpro_mrkaio-m68s
          - firefly_roc-rk3328-cc
          - firefly_roc-rk3568-pc
          - friendlyarm_nanopc-t4
          - friendlyarm_nanopc-t6
          - friendlyarm_nanopi-r2c
          - friendlyarm_nanopi-r2c-plus
          - friendlyarm_nanopi-r2s
          - friendlyarm_nanopi-r3s
          - friendlyarm_nanopi-r4s
          - friendlyarm_nanopi-r4se
          - friendlyarm_nanopi-r4s-enterprise
          - friendlyarm_nanopi-r5c
          - friendlyarm_nanopi-r5s
          - friendlyarm_nanopi-r6c
          - friendlyarm_nanopi-r6s
          - huake_guangmiao-g4c
          - lunzn_fastrhino-r66s
          - lunzn_fastrhino-r68s
          - lyt_t68m
          - pine64_rock64
          - pine64_rockpro64
          - radxa_cm3_io
          - radxa_e25
          - radxa_rock-3a
          - radxa_rock-3b
          - radxa_rock-3c
          - radxa_rock-5a
          - radxa_rock-5b
          - radxa_rock-pi-4a
          - radxa_rock-pi-e
          - radxa_rock-pi-s
          - radxa_zero-3e
          - radxa_zero-3w
          - sinovoip_bpi-r2-pro
          - xunlong_orangepi-5
          - xunlong_orangepi-5-plus
          - xunlong_orangepi-r1-plus
          - xunlong_orangepi-r1-plus-lts
        required: true
        default: 'friendlyarm_nanopi-r4s'
      package_repo:
        description: '要编译的插件 Git 仓库地址'
        required: true
        default: 'https://github.com/mccding/luci-app-ddns-go'
      package_name:
        description: '插件包名 (通常是仓库名)'
        required: true
        default: 'luci-app-ddns-go'
      immortalwrt_branch_or_tag:
        description: '要编译的 ImmortalWrt Git 分支或标签'
        required: true
        default: 'v24.10.2'

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # ##################################################################
      # ## ↓↓↓ 这里是本次修改的核心部分 ↓↓↓
      # ##################################################################
      - name: Install build dependencies
        run: |
          sudo apt-get update
          # 添加 python3-pip 用于安装 Python 模块
          sudo apt-get install -y build-essential clang flex bison g++ gawk gcc-multilib g++-multilib \
          gettext git libncurses5-dev libssl-dev python3-distutils rsync unzip zlib1g-dev \
          file wget python3-pip
          # 安装编译所需的 pyelftools 模块
          sudo pip3 install pyelftools

      - name: Cache build environment
        uses: actions/cache@v4
        with:
          path: |
            ~/immortalwrt/staging_dir
            ~/immortalwrt/toolchain
            ~/immortalwrt/tmp
            ~/immortalwrt/dl
          key: ${{ runner.os }}-immortalwrt-${{ inputs.immortalwrt_branch_or_tag }}-${{ inputs.profile }}

      - name: Clone ImmortalWrt source code
        run: |
          if [ ! -d "~/immortalwrt" ]; then
            git clone https://github.com/immortalwrt/immortalwrt.git -b ${{ inputs.immortalwrt_branch_or_tag }} --depth 1 ~/immortalwrt
          fi

      - name: Add custom feeds and configure build
        run: |
          cd ~/immortalwrt
          
          echo "src-git custom ${{ inputs.package_repo }}" >> feeds.conf.default
          
          ./scripts/feeds update -a
          ./scripts/feeds install -a
          
          echo "CONFIG_TARGET_rockchip=y" > .config
          echo "CONFIG_TARGET_rockchip_armv8=y" >> .config
          echo "CONFIG_TARGET_rockchip_armv8_DEVICE_${{ inputs.profile }}=y" >> .config
          
          echo "CONFIG_PACKAGE_${{ inputs.package_name }}=m" >> .config
          
          make defconfig

      - name: Compile the package
        run: |
          cd ~/immortalwrt
          
          make package/feeds/custom/${{ inputs.package_name }}/compile -j$(nproc) V=s

      - name: Organize and upload IPK package
        uses: softprops/action-gh-release@v2
        with:
          tag_name: "ipk-${{ inputs.package_name }}-${{ inputs.profile }}"
          name: "ImmortalWrt - ${{ inputs.package_name }} (${{ inputs.profile }})"
          body: |
            (从源码构建) 自动编译生成的 IPK 插件包。
            - ImmortalWrt 版本: `${{ inputs.immortalwrt_branch_or_tag }}`
            - 目标设备: `${{ inputs.profile }}`
            - 插件仓库: `${{ inputs.package_repo }}`
          files: |
            ~/immortalwrt/bin/packages/*/*/*.ipk
          prerelease: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
